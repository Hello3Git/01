local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local mouse = player:GetMouse()

local tool = Instance.new("Tool")
tool.Name = "Roaming Spirit"
tool.RequiresHandle = false
tool.Parent = player:WaitForChild("Backpack")

local invis_on = false

holder = game:GetService("UserInputService").InputBegan:Connect(function(e, gameProcessed)
	if gameProcessed then return end
	if e.KeyCode == Enum.KeyCode.R then
		invis_on = not invis_on
		if invis_on then
			local char = game.Players.LocalPlayer.Character
			local savedpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			wait()
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-25.95, 84, 3537.55))
			wait(.15)
			local Seat = Instance.new('Seat', game.Workspace)
			Seat.Anchored = false
			Seat.CanCollide = false
			Seat.Name = 'invischair'
			Seat.Transparency = 1
			Seat.Position = Vector3.new(-25.95, 84, 3537.55)
			local Weld = Instance.new("Weld", Seat)
			Weld.Part0 = Seat
			Weld.Part1 = game.Players.LocalPlayer.Character:FindFirstChild("Torso") or game.Players.LocalPlayer.Character.UpperTorso
			wait()
			Seat.CFrame = savedpos
			for _, a in pairs(char:GetDescendants()) do
				if a:IsA("BasePart") or a:IsA("Decal") then
					a.Transparency = 0.75
				end
			end

			game.StarterGui:SetCore("SendNotification", {
				Title = "on",
				Duration = 3,
				Text = "_"
			})
		else
			local char = game.Players.LocalPlayer.Character
			for _, obj in pairs(workspace:GetChildren()) do
				if obj:IsA("Seat") and obj.Name == "invischair" then
					obj:Destroy()
				end
			end

			for _, a in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if a:IsA("BasePart") or a:IsA("Decal") then
					a.Transparency = 0
				elseif a:IsA("Accessory") then
					local handle = a:FindFirstChild("Handle")
					if handle and handle:IsA("BasePart") then
						handle.Transparency = 0
					end
				end
			end

			game.StarterGui:SetCore("SendNotification", {
				Title = "off",
				Duration = 3,
				Text = "_"
			})
		end

	end
end)

game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
	holder:Disconnect()
end)

tool.Activated:Connect(function()
	invis_on = not invis_on
	if invis_on then
		local char = game.Players.LocalPlayer.Character
		local savedpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		wait()
		game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-25.95, 84, 3537.55))
		wait(.15)
		local Seat = Instance.new('Seat', game.Workspace)
		Seat.Anchored = false
		Seat.CanCollide = false
		Seat.Name = 'invischair'
		Seat.Transparency = 1
		Seat.Position = Vector3.new(-25.95, 84, 3537.55)
		local Weld = Instance.new("Weld", Seat)
		Weld.Part0 = Seat
		Weld.Part1 = game.Players.LocalPlayer.Character:FindFirstChild("Torso") or game.Players.LocalPlayer.Character.UpperTorso
		wait()
		Seat.CFrame = savedpos
		for _, a in pairs(char:GetDescendants()) do
			if a:IsA("BasePart") or a:IsA("Decal") then
				a.Transparency = 0.75
			end
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = "on",
			Duration = 3,
			Text = "_"
		})
	else
		local char = game.Players.LocalPlayer.Character
		for _, obj in pairs(workspace:GetChildren()) do
			if obj:IsA("Seat") and obj.Name == "invischair" then
				obj:Destroy()
			end
		end

		for _, a in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
			if a:IsA("BasePart") or a:IsA("Decal") then
				a.Transparency = 0
			elseif a:IsA("Accessory") then
				local handle = a:FindFirstChild("Handle")
				if handle and handle:IsA("BasePart") then
					handle.Transparency = 0
				end
			end
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = "off",
			Duration = 3,
			Text = "_"
		})
	end

end)
game:GetService("RunService").RenderStepped:Connect(function(dt)
	if invis_on then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 80
		elseif not invis_on then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
	end
end)
